---
import '../styles/index.css';
import 'react-chessboard-ui/dist/index.css';

import LayoutApp from '../layouts/LayoutApp.astro';
import Header from '../layouts/Header.astro';
---
<LayoutApp>
    <Header />
    <div class="topBlock">
        <h1 class="title">Chessboard UI</h1>
        <div class="codeBlock" id="codeBlock">
            <span>npm install react-chessboard-ui</span>
        </div>
        <div class="copyResultView">
            <span id="copyResultView"></span>
        </div>
    </div>

    <div class="buttonsBlock">
        <a href="/docs/quickStart">
            <button class="buttonBlue">
                Get started
            </button>
        </a>

        <a href="/examples/customFen">
            <button class="buttonBlack">
                Examples
            </button>
        </a>
    </div>
</LayoutApp>

<script>
    const code = 'npm install react-chessboard-ui';
    const codeBlock = document.querySelector('#codeBlock');
    const copyResultView = document.querySelector<HTMLSpanElement>('#copyResultView');

    async function copyInstallCode() {
        try {
            await navigator.clipboard.writeText(code);
            codeBlock.classList.add('codeBlockCopied');
            copyResultView.innerText = "Copied! âœ…";
            const timeout = setTimeout(() => {
                codeBlock.classList.remove('codeBlockCopied');
                copyResultView.innerText = "";
                clearTimeout(timeout)
            }, 4000);
        } catch(error) {
            console.error(error);
        }
    }

    codeBlock.addEventListener('click', () => copyInstallCode())
</script>

<style scoped>
    .topBlock {
        padding-top: 82px;
        min-height: 360px;
        background: rgb(55,65,81);
        background: -moz-linear-gradient(90deg, rgba(55,65,81,1) 6%, rgba(0,0,0,1) 100%);
        background: -webkit-linear-gradient(90deg, rgba(55,65,81,1) 6%, rgba(0,0,0,1) 100%);
        background: linear-gradient(90deg, rgba(55,65,81,1) 6%, rgba(0,0,0,1) 100%);
        filter: progid:DXImageTransform.Microsoft.gradient(startColorstr="#374151",endColorstr="#000000",GradientType=1);
    }

    .title {
        color: #fff;
        text-align: center;
        font-size: 40px;
        margin: 0;
        margin-bottom: 80px;
    }

    .codeBlock {
        background-color: #000000;
        border-radius: 14px;
        padding: 20px 40px;
        width: fit-content;
        margin: auto;
        cursor: pointer;
        transition: all .3s;
    }

    .codeBlock:hover {
        background-color: #111111;
    }

    .codeBlockCopied {
        /* background-color: #212236; */
        background-color: #213624 !important;
    }

    .codeBlock > span {
        font-family: monospace;
        color: #e0e0e0;
        font-size: 20px;
        user-select: none;
    }

    .buttonsBlock {
        display: flex;
        justify-content: center;
        gap: 16px;
        padding: 40px 0px;
    }

    button {
        font-size: 24px;
        border: none;
        padding: 10px 40px;
        cursor: pointer;
        color: #fff;
        border-radius: 8px;
        transition: background-color .3s;
    }

    .buttonBlue {
        background-color: var(--color-blue-500);
    }

    .buttonBlue:hover {
        background-color: var(--color-blue-700);
    }

    .buttonBlack {
        background-color: var(--color-gray-700);
    }

    .buttonBlack:hover {
        background-color: var(--color-gray-900);
    }

    .copyResultView {
        display: flex;
        justify-content: center;
        padding-top: 4px;
        color: var(--color-gray-100);
    }

    @media screen and (max-width: 460px) {
        .topBlock {
            min-height: 160px;
        }

        .codeBlock {
            display: none;
        }

        .buttonsBlock {
            flex-direction: column;
            align-items: center;
            padding: 40px 20px;
        }

        .buttonsBlock a {
            display: block;
            width: 100%;
        }

        .buttonBlue,
        .buttonBlack {
            width: 100%;
        }
    }
</style>
